# Generated by Django 3.0.14 on 2022-07-19 17:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=256, verbose_name='username')),
                ('firstName', models.CharField(max_length=256, null=True, verbose_name='Имя')),
                ('secondName', models.CharField(max_length=256, null=True, verbose_name='Фамилия')),
                ('is_active', models.BooleanField(default=True)),
                ('account_type', models.CharField(max_length=30, verbose_name='Тип')),
                ('admin', models.BooleanField(default=False)),
                ('verif_time', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Страна производства')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_series', models.IntegerField()),
                ('magnet_reference', models.URLField()),
                ('person_who_added', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Эпизод',
                'verbose_name_plural': 'Эпизоды',
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('year_of_release', models.IntegerField()),
                ('date_of_adding', models.DateField(default=django.utils.timezone.now)),
                ('screensaver_reference', models.URLField()),
                ('magnet_reference', models.CharField(max_length=300, verbose_name='magnet link')),
                ('category', models.ManyToManyField(blank=True, to='main.Category')),
                ('country', models.ManyToManyField(blank=True, to='main.Country')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_season', models.IntegerField()),
                ('person_who_added', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сезон',
                'verbose_name_plural': 'Сезоны',
            },
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('date_of_creation', models.IntegerField()),
                ('date_of_adding', models.DateTimeField(default=django.utils.timezone.now)),
                ('screensaver_reference', models.URLField()),
                ('category', models.ManyToManyField(to='main.Category')),
                ('country', models.ManyToManyField(to='main.Country')),
                ('genre', models.ManyToManyField(to='main.Genre')),
                ('person_who_added', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сериал',
                'verbose_name_plural': 'Сериалы',
            },
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.URLField()),
                ('episode_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Episode')),
                ('film_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Film')),
                ('season_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Season')),
                ('serial_pk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Serial')),
            ],
            options={
                'verbose_name': 'Трейлер',
                'verbose_name_plural': 'Трейлеры',
            },
        ),
        migrations.AddField(
            model_name='season',
            name='serial_parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Serial'),
        ),
        migrations.AddField(
            model_name='film',
            name='genre',
            field=models.ManyToManyField(blank=True, to='main.Genre'),
        ),
        migrations.AddField(
            model_name='film',
            name='person_who_added',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='episode',
            name='season_parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Season'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('rating', models.SmallIntegerField()),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('to_film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Film')),
                ('to_serial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Serial')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='fav_episodes',
            field=models.ManyToManyField(to='main.Episode'),
        ),
        migrations.AddField(
            model_name='customer',
            name='fav_films',
            field=models.ManyToManyField(to='main.Film'),
        ),
        migrations.AddField(
            model_name='customer',
            name='fav_serials',
            field=models.ManyToManyField(to='main.Serial'),
        ),
        migrations.AddField(
            model_name='customer',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
